modules:

  ##
  ## GitHub API configuration for latest release query
  ##
  github_latest_release:
    metrics:
    - name: release
      type: object
      path: '{ $ }'
      help: GitHub latest release
      labels:
        tag_name: '{ .tag_name }'
        html_url: '{ .html_url }'
      values:
        id: '{ .id }'

  ##
  ## CoinGecko API configuration for ETH price query
  ## - To add new currencies, follow the pattern of currencies shown below.
  ## - See CoinGecko's API documentation for a list of supported currencies.
  ##   https://api.coingecko.com/api/v3/simple/supported_vs_currencies
  ##
  coingecko_eth_price:
    metrics:
    - name: eth
      type: object
      path: '{.ethereum}'
      help: Ether (ETH) price in fiat
      values:
        USD: '{.usd}'
        EUR: '{.eur}'
        JPY: '{.jpy}'
        GBP: '{.gbp}'
        AUD: '{.aud}'
        CAD: '{.cad}'
        CHF: '{.chf}'
        CNY: '{.cny}'
        HKD: '{.hkd}'
        NZD: '{.nzd}'
        ILS: '{.ils}'
        KRW: '{.krw}'
        MXN: '{.mxn}'
        RUB: '{.rub}'
        SGD: '{.sgd}'
        TWD: '{.twd}'
        INR: '{.inr}'

  ##
  ## JSON RPC call to local consensus client for head slot information
  ##
  consensus_headers_head:
    metrics:
      - name: consensus_head_slot
        path: '{ $.data.header.slot }'

  ##
  ## JSON RPC call to consensus client for finalized slot information
  ##
  consensus_beacon_headers_finalized:
    metrics:
      - name: consensus_beacon_headers_finalized:slot
        path: '{ $.data.header.message.slot }'

  ##
  ## JSON RPC call to consensus client for peer count information
  ##
  consensus_node_peer_count:
    metrics:
      - name: consensus_node_peer_count:connected
        path: '{ $.data.connected }'

  ##
  ## JSON RPC call to consensus client for validator status information
  ##
  consensus_beacon_states_head_validators:
    metrics:
      - name: consensus_validator
        type: object
        path: '{ $.data }'
        labels:
          pubkey: '{ .validator.pubkey }'
          index:  '{ .index }'
          status: '{ .status }'
        values:
          balance: '{ .balance }'

  ##
  ## JSON RPC call to consensus client for client version information
  ##
  consensus_node_version:
    metrics:
      - name: consensus_node_version
        path: '1'
        labels:
          version: '{ .data.version }'

  ##
  ## JSON RPC call to consensus client for beacon chain genesis information
  ##
  consensus_beacon_genesis:
    metrics:
      - name: consensus_beacon_genesis
        type: object
        path: "{ .data }"
        values:
          time: '{ .genesis_time }'

  ##
  ## JSON RPC call to consensus client for syncing status information
  ##
  consensus_node_syncing:
    metrics:
      - name: consensus_node_syncing
        path: "{ .data.is_syncing }"

  ##
  ## JSON RPC call to execution client for syncing status information
  ##
  execution_eth_syncing:
    metrics:
      - name: execution_eth_syncing
        path: "{ .result }"
    headers:
      Content-Type: application/json
    body:
      content: |
        {"jsonrpc":"2.0","method":"eth_syncing","params":[],"id":1}

  ##
  ## JSON RPC call to execution client for transaction pool status information
  ## - Note: There are two variations on this same endpoint. One accepts hex input,
  ##   while the other accepts integer input.
  ##
  ## Supported by: Nethermind
  ##
  execution_txpool_status_int:
    metrics:
      - name: execution_txpool:pending
        path: '{ $.result.pending }'
      - name: execution_txpool:queued
        path: '{ $.result.queued }'
    headers:
      Content-Type: application/json
    body:
      content: |
        {"jsonrpc":"2.0","method":"txpool_status","params":[],"id":1}

  ##
  ## JSON RPC call to execution client for transaction pool status information
  ## - Note: There are two variations on this same endpoint. One accepts hex input,
  ##   while the other accepts integer input. 
  ##
  ## Supported by: Erigon, Geth
  ##
  execution_txpool_status_hex:
    metrics:
      - name: execution_txpool:pending
        path: '{ $.result.pending }{"p0"}'
      - name: execution_txpool:queued
        path: '{ $.result.queued }{"p0"}'
    headers:
      Content-Type: application/json
    body:
      content: |
        {"jsonrpc":"2.0","method":"txpool_status","params":[],"id":1}


  ##
  ## JSON RPC call to execution client for client version information
  ##
  execution_web3_clientVersion:
    metrics:
      - name: execution_version
        path: '1'
        labels:
          version: '{ .result }'
    headers:
      Content-Type: application/json
    body:
      content: |
        {"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":1}

  ##
  ## JSON RPC call to execution client for max priority fee per gas information
  ##
  execution_eth_maxPriorityFeePerGas:
    metrics:
      - name: execution_eth_maxPriorityFeePerGas
        path: '{ .result }{"p0"}'
    headers:
      Content-Type: application/json
    body:
      content: |
        {"jsonrpc":"2.0","method":"eth_maxPriorityFeePerGas","params":[],"id":1}

  ##
  ## JSON RPC call to execution client for fee history information
  ##
  execution_eth_feeHistory:
    metrics:
      - name: execution_fee
        type: object
        path: '{ .result }'
        values:
          base_fee_per_gas: '{.baseFeePerGas[0]}{"p0"}'
          gas_used_ratio: '{.gasUsedRatio[0]}'
    headers:
      Content-Type: application/json
    body:
      content: |
        {"jsonrpc":"2.0","method":"eth_feeHistory","params":[1,"latest",[100]],"id":1}

  ##
  ## JSON RPC call to execution client for peer count information
  ##
  execution_net_peerCount:
    metrics:
      - name: execution_net_peerCount
        path: '{$.result}{"p0"}'
    headers:
      Content-Type: application/json
    body:
      content: |
        {"jsonrpc":"2.0","method":"net_peerCount","params":[],"id":1}

  ##
  ## JSON RPC call to execution client for account balance information
  ##
  execution_eth_getBalance:
    metrics:
      - name: address_balance
        path: '{$.result}{"p0"}'
    headers:
      Content-Type: application/json
    body:
      content: |
        {"jsonrpc":"2.0","method":"eth_getBalance","params":["{{ (index .pubkey 0) }}", "latest"],"id":1}
      templatize: true

  ##
  ## JSON RPC call to execution client for finalized block information
  ##
  execution_finalized_block:
    metrics:
      - name: execution_finalized_block
        path: "{ .result.number }{'p0'}"
    headers:
      Content-Type: application/json
    body:
      content: |
              {"jsonrpc":"2.0","method":"eth_getBlockByNumber","params":["finalized", false],"id":1}