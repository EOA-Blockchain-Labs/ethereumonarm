#!/bin/bash
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.
# This script turns the Ubuntu 64 bit image into an Ethereum on ARM image
#

FLAG="/root/first-run.flag"
if [ ! -f $FLAG ]; then

  # Wait to interface to link up
  n=0
  until [ "$n" -ge 3 ]; do

    if nc -z apt.ethraspbian.com 80 >/dev/null 2>&1; then
      break
    else
      n=$((n + 1))
      sleep 5
    fi
  done

  if [ "$n" -eq 3 ]; then
    echo "Stopping the installation, access to apt.ethraspbian.com is needed"
    exit 1
  fi

  # Format USB3 SSD and mount it as /home
  echo "Looking for USB drive"
  if stat /dev/sda >/dev/null 2>&1; then
    echo "USB drive found"
    echo "Partitioning and formatting USB Drive..."
    wipefs -a /dev/sda
    sgdisk -n 0:0:0 /dev/sda
    mkfs.ext4 -F /dev/sda1
    echo '/dev/sda1 /home ext4 defaults,noatime 0 2' >>/etc/fstab && mount /home
  else
    echo "no SDD detected"
    echo "Stopping the installation, and extenal disk is needed"
    exit 1
  fi

  # Modify hostname (ethereumonarm-$MAC-HASH-CHUNK)
  echo Changing hostname
  MAC_HASH=$(sha256sum </sys/class/net/eth0/address | awk '{print substr($0,0,9)}')
  echo ethereumonarm-rpi4-"$MAC_HASH" >/etc/hostname
  sed -i "s/127.0.0.1.*/127.0.0.1\tethereumonarm-rpi4-$MAC_HASH/g" /etc/hosts

  # Create Ethereum account
  echo "Creating ethereum user"
  if ! id -u ethereum >/dev/null 2>&1; then
    adduser --disabled-password --gecos "" ethereum
  fi

  echo "ethereum:ethereum" | chpasswd
  for GRP in sudo netdev audio video dialout plugdev; do
    adduser ethereum $GRP
  done

  # Force password change on first login
  chage -d 0 ethereum

  # Swap installation
  # Install dphys-swapfile package
  apt-get -y install dphys-swapfile

  # Configure swap file location and size
  sed -i 's|#CONF_SWAPFILE=.*|CONF_SWAPFILE=/home/ethereum/swapfile|' /etc/dphys-swapfile
  sed -i 's|#CONF_SWAPSIZE=.*|CONF_SWAPSIZE=8192|' /etc/dphys-swapfile
  sed -i 's|#CONF_MAXSWAP=.*|CONF_MAXSWAP=8192|' /etc/dphys-swapfile

  # Enable dphys-swapfile service
  systemctl enable dphys-swapfile

  # Increasing how aggressively the kernel will swap memory pages since we are using ZRAM first
  # Increases cache pressure, which increases the tendency of the kernel to reclaim memory used for caching of directory and inode objects. You will use less memory over a longer period of time
  # Background processes will start writing right away when it hits the 1% limit but the system wonâ€™t force synchronous I/O until it gets to 50% dirty_ratio
  # Page allocation error workout
  {
    echo "vm.min_free_kbytes=65536"
    echo "vm.swappiness=100"
    echo "vm.vfs_cache_pressure=500"
    echo "vm.dirty_background_ratio=1"
    echo "vm.dirty_ratio=50"
  } >>/etc/sysctl.conf

  # Ethereum software installation
  # Add APT EthRaspbian repository
  sleep 5
  echo "Adding Ethereum repositories"
  wget -q -O - http://apt.ethereumonarm.com/eoa.apt.keyring.gpg| sudo tee /etc/apt/trusted.gpg.d/eoa.apt.keyring.gpg > /dev/null
  add-apt-repository -y -n "deb http://apt.ethereumonarm.com focal main"

    # Install Ethereum packages
  echo Installing Ethereum packages
  apt-get update
    # Install Layer 1
  apt-get -y install geth nethermind erigon besu prysm lighthouse nimbus teku staking-deposit-cli
  # install Layer 2
  apt-get -y install arbitrum-nitro optimism-op-geth optimism-op-node polygon-bor polygon-heimdall starknet-juno

  # Install monitoring packages
  apt-get -y install gpg wget
  wget -q -O - https://packages.grafana.com/gpg.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/grafana.gpg >/dev/null
  echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
  apt-get -y update
  apt-get -y install grafana
  systemctl enable grafana-server
  adduser --quiet --system --home /home/prometheus --no-create-home --group --gecos "Prometheus daemon" prometheus
  mkdir -p /home/prometheus/{metrics2,node-exporter}
  chown -R prometheus:prometheus /home/prometheus/{metrics2,node-exporter}
  apt-get install -y prometheus prometheus-node-exporter ethereum-metrics-exporter json-exporter
  systemctl enable prometheus prometheus-node-exporter ethereum-metrics-exporter json-exporter

  # install Ethereum on ARM monitoring config
  apt-get -y install ethereumonarm-monitoring-extras
  set-ethereunonarm-monitoring-extras -o

  # Install MEV Boost with no censorship relays
  apt-get -y install mev-boost

  #Install ufw
  apt-get -y install ufw
  ufw --force disable

  # Install Nginx proxy for connecting wallets or quering the RPC API
  apt-get -y install nginx
  apt-get -y install ethereumonarm-nginx-proxy-extras ethereumonarm-utils
  systemctl enable nginx

  # Install some extra dependencies
  apt-get -y install libraspberrypi-bin net-tools
  #Disable root user
  passwd -l root

  #Delete ubuntu user
  deluser ubuntu

  #the next line creates an empty file so it won't run on next boot
  touch $FLAG
  grep "rc.local" /var/log/syslog >>$FLAG
  reboot
else
  echo "Nothing to do"
fi
exit 0
